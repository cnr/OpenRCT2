name: CI
on:
  push:
    paths-ignore:
      - '.editorconfig'
      - '.gitattributes'
      - '.github/*_TEMPLATE/**'
      - '.github/workflows/localisation.yml'
      - '.gitignore'
      - '.vscode/**'
  pull_request:
    paths-ignore:
      - '.editorconfig'
      - '.gitattributes'
      - '.github/*_TEMPLATE/**'
      - '.github/workflows/localisation.yml'
      - '.gitignore'
      - '.vscode/**'
defaults:
  run:
    shell: bash
env:
  OPENRCT2_BUILD_SERVER: GitHub
  OPENRCT2_ORG_TOKEN: ${{ secrets.OPENRCT2_ORG_TOKEN }}
  BACKTRACE_IO_TOKEN: ${{ secrets.BACKTRACE_IO_TOKEN }}
  OPENRCT2_VERSION: 0.4.10

# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  lint-commit:
    name: Lint Commit Message
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Lint Commit Messages
        uses: wagoid/commitlint-github-action@v5
        with:
          configFile: .commitlint.json
  check-code-formatting:
    name: Check code formatting
    runs-on: ubuntu-latest
    container: openrct2/openrct2-build:4-format
    defaults:
      run:
        shell: sh
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run clang-format
        run: scripts/check-code-formatting
  check-changelog-formatting:
    name: Check changelog formatting
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run check-changelog-formatting
        run: scripts/check-changelog-formatting
  g2dat:
    name: g2.dat
    runs-on: ubuntu-latest
    steps:
      - name: Checkout OpenRCT2
        uses: actions/checkout@v4
        with:
          path: OpenRCT2
      - name: Download gxc
        run: |
          curl -Lo tools.tar.gz https://github.com/IntelOrca/libsawyer/releases/download/v1.3.0/libsawyer-tools-linux-x64.tar.gz
          mkdir -p "$GITHUB_WORKSPACE/bin"
          tar -C "$GITHUB_WORKSPACE/bin" -xf tools.tar.gz
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - name: Build g2.dat
        run: |
          gxc build g2.dat OpenRCT2/resources/g2/sprites.json
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: g2.dat
          path: g2.dat
  windows:
    name: Windows
    runs-on: windows-latest
    needs: check-code-formatting
    strategy:
      fail-fast: false
      matrix:
        platform: [x64]
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
      - name: Setup environment
        run: |
          BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)
          if [[ $BRANCH == 'develop' || $BRANCH == 'master' ]]; then
             echo "CONFIGURATION=ReleaseLTCG" >> "$GITHUB_ENV"
          else
             echo "CONFIGURATION=Release" >> "$GITHUB_ENV"
          fi
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update GA environment
        run: echo "OPENRCT2_DESCRIBE=v0.4.10-fastforward" >> $GITHUB_ENV
      - name: Install MSVC problem matcher
        uses: ammaraskar/msvc-problem-matcher@master
      - name: Build OpenRCT2
        run: . scripts/setenv && build
      - name: Build artifacts
        run: |
          . scripts/setenv -q
          build-portable
          build-symbols
          build-installer -i
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v4
        with:
          name: OpenRCT2-${{ runner.os }}-${{ matrix.platform }}
          path: artifacts
          if-no-files-found: error
      - name: Run Tests
        if: matrix.platform != 'arm64'
        run: . scripts/setenv -q && run-tests
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "artifacts/test-**.xml"
        if: matrix.platform != 'arm64'
      - name: Upload artifacts (openrct2.org)
        run: |
          . scripts/setenv
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
            upload-build artifacts/openrct2-portable-*.zip "windows-portable-$PLATFORM.zip" $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
            upload-build artifacts/openrct2-installer-*.exe "windows-installer-$PLATFORM.exe" $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
            upload-build artifacts/openrct2-symbols-*.zip "windows-symbols-$PLATFORM.zip" $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
            upload-backtrace-symbols artifacts/openrct2-symbols-*.zip
          else
              echo 'Not going to push build'
          fi
  macos-cmake:
    name: macOS (${{ matrix.arch }}) using CMake
    runs-on: macos-latest
    needs: check-code-formatting
    strategy:
      fail-fast: false
      matrix:
        arch: [x64, arm64]
        include:
          - arch: x64
            cache_key: macos-x64
            # Note: only build/run tests on the native architecture of the CI agent
            # GitHub macos-latest agents are currently all Intel
            build_flags: -DARCH="x86_64" -DWITH_TESTS=on
            run_tests: true
          - arch: arm64
            cache_key: macos-arm64
            build_flags: -DARCH="arm64"
            run_tests: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.11 # https://github.com/hendrikmuhs/ccache-action/issues/181
        with:
          key: ${{ matrix.cache_key }}
      - name: Configure ccache
        run: |
          # See https://github.com/hendrikmuhs/ccache-action/issues/146
          ccache --set-config=compiler_check=content
      - name: Install GCC problem matcher
        uses: ammaraskar/gcc-problem-matcher@master
      - name: Build OpenRCT2
        run: |
          HOMEBREW_NO_ANALYTICS=1 brew install ninja pkg-config
          . scripts/setenv -q && build -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=on ${{ matrix.build_flags }}
      - name: Build artifacts
        run: |
          . scripts/setenv
          mkdir -p artifacts
          mv bin/OpenRCT2.app artifacts
          echo -e "\033[0;36mCompressing OpenRCT2.app...\033[0m"
          cd artifacts
          zip -rqy openrct2-macos.zip OpenRCT2.app
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v4
        with:
          name: OpenRCT2-${{ runner.os }}-${{ matrix.arch }}-cmake
          path: artifacts/openrct2-macos.zip
          if-no-files-found: error
      - name: Run Tests
        if: ${{matrix.run_tests}}
        run: . scripts/setenv -q && run-tests
      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "artifacts/test-**.xml"
        if: ${{matrix.run_tests}}
  macos-universal:
    name: macOS universal app bundle
    runs-on: macos-latest
    needs: macos-cmake
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: download x64 app bundle
        uses: actions/download-artifact@v4
        with:
          name: OpenRCT2-${{ runner.os }}-x64-cmake
          path: macos_universal/x64
      - name: download arm64 app bundle
        uses: actions/download-artifact@v4
        with:
          name: OpenRCT2-${{ runner.os }}-arm64-cmake
          path: macos_universal/arm64
      - name: Make Universal app bundle
        run: |
          . scripts/setenv
          cd macos_universal
          unzip x64/openrct2-macos.zip -d x64
          unzip arm64/openrct2-macos.zip -d arm64
          create-macos-universal
      - name: Create artifact
        run: |
          . scripts/setenv
          mkdir -p artifacts
          mv macos_universal/OpenRCT2-universal.app artifacts/OpenRCT2.app
          echo -e "\033[0;36mCompressing OpenRCT2.app...\033[0m"
          cd artifacts
          zip -rqy openrct2-macos.zip OpenRCT2.app
      - name: Upload artifacts (CI)
        uses: actions/upload-artifact@v4
        with:
          name: OpenRCT2-${{ runner.os }}-universal
          path: artifacts/openrct2-macos.zip
          if-no-files-found: error
      - name: Upload artifacts (openrct2.org)
        run: |
          . scripts/setenv
          if [[ "$OPENRCT2_PUSH" == "true" ]]; then
            upload-build artifacts/openrct2-macos.zip macos-universal.zip $OPENRCT2_VERSION $OPENRCT2_SHA1 $OPENRCT2_BRANCH
          else
            echo 'Not going to push build'
          fi
